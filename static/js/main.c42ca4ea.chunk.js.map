{"version":3,"sources":["redux/rootReducer.js","redux/planner/plannerReducers.js","redux/planner/plannerTypes.js","redux/store.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm.js","redux/planner/plannerActions.js","components/ExpenseForm.js","redux/planner/plannerSelectors.js","components/ExpensesTable.js","components/Value.js","components/Values.js","components/App.js","index.js"],"names":["combineReducers","budget","state","type","payload","value","expenses","expense","filter","id","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","onChange","name","defaultProps","StyledButton","button","Button","onClick","BudgetForm","handleChange","e","setState","target","handleSubmit","preventDefault","onSave","this","Component","connect","dispatch","Number","saveBudget","ExpenseForm","amount","shortid","generate","addExpense","getBudget","getAllExpenses","getExpensesTotal","createSelector","reduce","total","getBalance","Table","table","mapDispatchToProps","onRemove","items","selectors","map","key","Container","div","isPositive","p","Amount","Value","section","balance","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c42ca4ea.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { budgetReducer, expenseReducer } from './planner/plannerReducers';\r\n\r\nexport default combineReducers({\r\n  budget: budgetReducer,\r\n  expenses: expenseReducer,\r\n});","import { SAVE_BUDGET, ADD_EXPENSE, REMOVE_EXPENSE } from './plannerTypes';\r\n\r\nexport const budgetReducer = (state = 0, { type, payload }) => {\r\n  switch (type) {\r\n    case SAVE_BUDGET:\r\n      return payload.value;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const expenseReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case ADD_EXPENSE:\r\n      return [...state, payload.expense];\r\n\r\n    case REMOVE_EXPENSE:\r\n      return state.filter(expense => expense.id !== payload.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","export const SAVE_BUDGET = 'SAVE_BUDGET';\r\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\r\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';","import { createStore } from 'redux';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport T from 'prop-types';\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst Form = ({ onSubmit = () => null, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nForm.propTypes = {\r\n  onSubmit: T.func.isRequired,\r\n  children: T.node.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport T from 'prop-types';\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nLabel.propTypes = {\r\n  children: T.node.isRequired,\r\n  customStyles: T.string.isRequired,\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport T from 'prop-types';\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n\r\nconst Input = ({\r\n  type = \" text\",\r\n  value = \"\",\r\n  onChange = () => null,\r\n  name = \"\"\r\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\r\n\r\nInput.defaultProps = {\r\n  name: '',\r\n};\r\n\r\nInput.propTypes = {\r\n  type: T.string.isRequired,\r\n  value: T.oneOfType([T.string, T.number]).isRequired,\r\n  onChange: T.func.isRequired,\r\n  name: T.string,\r\n};\r\n\r\n\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport T from 'prop-types';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst Button = ({ type = \"button\", label = \"\", onClick = () => null }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  label: '',\r\n  onClick: () => null,\r\n};\r\n\r\nButton.propTypes = {\r\n  type: T.string,\r\n  label: T.string,\r\n  onClick: T.func,\r\n};\r\n\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport T from 'prop-types';\r\nimport Form from '../components/shared/Form';\r\nimport Label from '../components/shared/Label';\r\nimport Input from '../components/shared/Input';\r\nimport Button from '../components/shared/Button';\r\n\r\nimport { saveBudget } from '../redux/planner/plannerActions';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nclass BudgetForm extends Component {\r\n  static propTypes = {\r\n    onSave: T.func.isRequired,\r\n  };\r\n  \r\n  state = {\r\n    budget: 0,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      budget: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSave(this.state.budget);\r\n    this.setState({ budget: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter your total budget\r\n          <Input\r\n            type=\"number\"\r\n            value={this.state.budget}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button label=\"Save\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSave: value => dispatch(saveBudget(value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(BudgetForm);","import shortid from 'shortid';\r\n\r\nimport { SAVE_BUDGET, ADD_EXPENSE, REMOVE_EXPENSE } from './plannerTypes';\r\n\r\n\r\nexport const saveBudget = value => {\r\n    return {\r\n      type: SAVE_BUDGET,\r\n      payload: {\r\n        value: Number(value),\r\n      },\r\n    };\r\n  };\r\n  \r\n  export const addExpense = ({ name, amount }) => {\r\n    return {\r\n      type: ADD_EXPENSE,\r\n      payload: {\r\n        expense: {\r\n          id: shortid.generate(),\r\n          name,\r\n          amount: Number(amount),\r\n        },\r\n      },\r\n    };\r\n  };\r\n  \r\n  export const removeExpense = id => {\r\n    return {\r\n      type: REMOVE_EXPENSE,\r\n      payload: {\r\n        id,\r\n      },\r\n    };\r\n  };\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Form from '../components/shared/Form';\r\nimport Label from '../components/shared/Label';\r\nimport Input from '../components/shared/Input';\r\nimport Button from '../components/shared/Button';\r\n\r\nimport { addExpense } from '../redux/planner/plannerActions';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\n class ExpenseForm extends Component {\r\n  static propTypes = {\r\n    onSave: T.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    amount: 0,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSave({ ...this.state });\r\n    this.setState({ name: '', amount: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense amount\r\n          <Input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            value={this.state.amount}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button label=\"Add\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSave: expense => dispatch(addExpense(expense)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ExpenseForm);","import { createSelector } from 'reselect';\r\n\r\nconst getBudget = state => state.budget;\r\n\r\nconst getAllExpenses = state => state.expenses;\r\n\r\nconst getExpensesTotal = createSelector(getAllExpenses, expenses =>\r\n  expenses.reduce((total, expense) => total + expense.amount, 0),\r\n);\r\n\r\nconst getBalance = state => getBudget(state) - getExpensesTotal(state);\r\n\r\nexport default {\r\n    getBudget,\r\n    getAllExpenses,\r\n    getBalance,\r\n    getExpensesTotal,\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../components/shared/Button';\r\nimport T from 'prop-types';\r\nimport selectors from '../redux/planner/plannerSelectors';\r\nimport { removeExpense } from '../redux/planner/plannerActions';\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst ExpensesTable = ({ items = [], onRemove }) => (\r\n  <Table>\r\n    <thead>\r\n      <tr>\r\n        <th>Expense name</th>\r\n        <th>Expense amount</th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(({ id, name, amount }) => (\r\n        <tr key={id}>\r\n          <td>{name}</td>\r\n          <td>{amount}</td>\r\n          <td>\r\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nExpensesTable.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      id: T.string,\r\n      name: T.string,\r\n      amount: T.number,\r\n    }),\r\n  ).isRequired,\r\n  onRemove: T.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: selectors.getAllExpenses(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onRemove: removeExpense,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport T from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Amount = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Value = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Amount>{value}&nbsp;&#x24;</Amount>\r\n  </Container>\r\n);\r\n\r\nValue.defaultProps = {\r\n  isPositive: false,\r\n};\r\n\r\nValue.propTypes = {\r\n  label: T.string.isRequired,\r\n  value: T.number.isRequired,\r\n  isPositive: T.bool,\r\n};\r\n\r\nexport default Value;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport T from 'prop-types';\r\nimport selectors from '../redux/planner/plannerSelectors';\r\n\r\nimport Value from '../components/Value';\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\n\r\nconst Values = ({ budget = 0, expenses = 0, balance = 0 }) => (\r\n  <Container>\r\n    <Value label=\"Budget\" value={budget} isPositive />\r\n    <Value label=\"Expenses\" value={expenses} />\r\n    <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n  </Container>\r\n);\r\n\r\nValues.propTypes = {\r\n  budget: T.number.isRequired,\r\n  expenses: T.number.isRequired,\r\n  balance: T.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    budget: selectors.getBudget(state),\r\n    expenses: selectors.getExpensesTotal(state),\r\n    balance: selectors.getBalance(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Values);\r\n ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport BudgetForm from \"../components/BudgetForm\";\r\nimport ExpenseForm from \"../components/ExpenseForm\";\r\nimport ExpensesTable from \"../components/ExpensesTable\";\r\nimport Values from \"../components/Values\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 340px 1fr;\r\n  align-items: flex-start;\r\n  grid-gap: 24px;\r\n  max-width: 960px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst App = ({expenses}) => (\r\n  <Container>\r\n      <BudgetForm />\r\n      <Values />\r\n      <ExpenseForm />\r\n      <ExpensesTable />\r\n  </Container>\r\n\r\n);\r\n\r\nApp.defaultProps = {\r\n    expenses: [],\r\n};\r\n\r\n// App.propTypes = {\r\n//     expenses: Text.arrayOf(T.object).isRequired,\r\n// };\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App';\n\n\nReactDOM.render(\n<Provider store={store}>\n    <App /></Provider>,\n     document.getElementById('root')\n);\n\n"],"sourceRoot":""}